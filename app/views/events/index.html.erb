<%= render partial: 'calendar' %>

<%= content_for(:javascripts) do %>
<script type='text/javascript'>
  var year = new Date().getFullYear();
  var month = new Date().getMonth();
  var day = new Date().getDate();

  var events = <%= @events.to_json.html_safe %>;

  $(document).ready(function() {
	$calendar = $('#calendar');
    $calendar.weekCalendar({
      timeslotsPerHour: 4,
      timeslotHeight: 15,
      hourLine: true,
      data: function(start, end , callback)
	  {
		var result = [];
		
		for(var i = 0; i < events.length; i++)
		{
			if(events[i].period)
			{
				var event_copy = owl.deepCopy(events[i]);
				event_copy.start = new Date(event_copy.start);
				event_copy.end = new Date(event_copy.end);
				var end_period = new Date(events[i].period[events[i].period.length - 1]);
				
				while(event_copy.end < end_period)
				{
					result.push(owl.deepCopy(event_copy));
					event_copy.start = event_copy.start.add({days: 7});
					event_copy.end = event_copy.end.add({days: 7});
				}
			}
			else
			{
				result.push(events[i]);
			}
		}
		
		callback({events: result});
	  },
      height: function($calendar) {
        return $(window).height() - $('h1').outerHeight(true);
      },
      eventRender : function(calEvent, $event) {
          $event.css('backgroundColor', calEvent.main_background);
          $event.find('.wc-time').css({'backgroundColor': calEvent.time_background, 'border':'1px solid ' + calEvent.time_border});
      },
      eventNew: function(calEvent, $event) {
		<% if @parent.nil? || has_permission?('adminCrew') %>
		 var $dialogContent = $("#event_edit_container");
         var startField = $dialogContent.find("select[name='start']").val(calEvent.start);
         var endField = $dialogContent.find("select[name='end']").val(calEvent.end);
         var titleField = $dialogContent.find("input[name='title']").val("");
		 var typeField = $dialogContent.find("select[name='event_type']").val("rehearsal");
		 var locationField = $dialogContent.find("input[name='location']").val("");
         var bodyField = $dialogContent.find("textarea[name='body']").val("");
		 var periodField = $dialogContent.find("select[name='period']").val("none");
		 try{
		 var attendeeField = $dialogContent.find("select[name='attendees']");
		 attendeeField.find("option:selected").removeAttr("selected");
		 attendeeField.multiselect('refresh');
	 	 }catch(err){}


         $dialogContent.dialog({
            modal: true,
            title: "New Calendar Event",
            close: function() {
               $dialogContent.dialog("destroy");
               $dialogContent.hide();
               $('#calendar').weekCalendar("removeUnsavedEvents");
            },
            buttons: {
               save : function() {
				  calEvent.start = new Date(startField.val());
	              calEvent.end = new Date(endField.val());
	              calEvent.title = titleField.val();
	              calEvent.body = bodyField.val();
				  calEvent.event_type = typeField.val();
				  calEvent.period = periodField.val();
				  calEvent.location = locationField.val();
				  try{
				  calEvent.attendees = attendeeField.val();
			  	  }catch(err){}
				  $.post('<%= polymorphic_path([@parent, :events], format: :json) %>', {
					authenticity_token: '<%= form_authenticity_token %>',
					event:{
					title: calEvent.title,
					start_time: calEvent.start,
					end_time: calEvent.end,
					location: calEvent.location,
					description: calEvent.body,
					event_type: calEvent.event_type,
					attendees: calEvent.attendees,
					period: calEvent.period
					}
					}, function(data, textStatus, xhr){
						if(xhr.status == 200)
						{
						calEvent.id = data.id;
						calEvent.main_background = data.main_background;
						calEvent.time_background = data.time_background;
						calEvent.time_border = data.time_border;
						calEvent.period = data.period;
						calEvent.session_name = data.session_name;

		                $calendar.weekCalendar("removeUnsavedEvents");
		                $calendar.weekCalendar("updateEvent", calEvent);
		                $dialogContent.dialog("close");
						}
						else
						{
							alert("Failed to create event!");
							$dialogContent.dialog("close");
						}
					});
               },
               cancel : function() {
                  $dialogContent.dialog("close");
               }
            }
         }).show();

         $dialogContent.find(".date_holder").text($calendar.weekCalendar("formatDate", calEvent.start));
         setupStartAndEndTimeFields(startField, endField, calEvent, $calendar.weekCalendar("getTimeslotTimes", calEvent.start));
		<% end %>
      },
      eventDrop: function(calEvent, $event) {
		<% if @parent.nil? || has_permission?('adminCrew') %>
        	$.ajax('<%= events_path %>/' + calEvent.id + '.json', {data:{
				authenticity_token: '<%= form_authenticity_token %>',
				event:{
				start_time: calEvent.start,
				end_time: calEvent.end
				}
				}, success: function(data, textStatus, xhr){
					if(xhr.status == 200)
					{
	                	$dialogContent.dialog("close");
					}
					else
					{
						calEvent.start = data.start;
						calEvent.end = data.end;
						alert("Failed to edit event!");
						$calendar.weekCalendar("updateEvent", calEvent);
						$dialogContent.dialog("close");
					}
				}, type: 'PUT'});
		<% end %>
      },
      eventResize: function(calEvent, $event) {
		<% if @parent.nil? || has_permission?('adminCrew') %>
        	$.ajax('<%= events_path %>/' + calEvent.id + '.json', {data:{
				authenticity_token: '<%= form_authenticity_token %>',
				event:{
				start_time: calEvent.start,
				end_time: calEvent.end
				}
				}, success: function(data, textStatus, xhr){
					if(xhr.status == 200)
					{
	                	$dialogContent.dialog("close");
					}
					else
					{
						calEvent.start = data.start;
						calEvent.end = data.end;
						alert("Failed to edit event!");
						$calendar.weekCalendar("updateEvent", calEvent);
						$dialogContent.dialog("close");
					}
				}, type: 'PUT'});
		<% end %>
      },
      eventClick: function(calEvent, $event) {
		<% if @parent.nil? || has_permission?('adminCrew') %>
         var $dialogContent = $("#event_edit_container");
         var startField = $dialogContent.find("select[name='start']").val(calEvent.start);
         var endField = $dialogContent.find("select[name='end']").val(calEvent.end);
         var titleField = $dialogContent.find("input[name='title']").val(calEvent.title);
		 var typeField = $dialogContent.find("select[name='event_type']").val(calEvent.event_type);
		 var locationField = $dialogContent.find("input[name='location']").val(calEvent.location);
         var bodyField = $dialogContent.find("textarea[name='body']").val(calEvent.description);
		 var periodField = $dialogContent.find("select[name='period']").val(calEvent.session_name);
         bodyField.val(calEvent.body);
		 try{
		 var attendeeField = $dialogContent.find("select[name='attendees']").val(calEvent.attendees).multiselect('refresh');
		 }catch(err){}

         $dialogContent.dialog({
            modal: true,
            title: "Edit - " + calEvent.title,
            close: function() {
               $dialogContent.dialog("destroy");
               $dialogContent.hide();
            },
            buttons: {
               save : function() {
				calEvent.start = new Date(startField.val());
	              calEvent.end = new Date(endField.val());
	              calEvent.title = titleField.val();
				  calEvent.location = locationField.val();
	              calEvent.body = bodyField.val();
				  calEvent.event_type = typeField.val();
				  calEvent.period = periodField.val();
				  try{
				  calEvent.attendees = attendeeField.val();
			  	  }catch(err){}
				  $.ajax('<%= events_path %>/' + calEvent.id + '.json', {data:{
					authenticity_token: '<%= form_authenticity_token %>',
					event:{
					title: calEvent.title,
					start_time: calEvent.start,
					end_time: calEvent.end,
					location: calEvent.location,
					description: calEvent.body,
					event_type: calEvent.event_type,
					attendees: calEvent.attendees,
					period: calEvent.period
					}
					}, success: function(data, textStatus, xhr){
						if(xhr.status == 200)
						{
						calEvent.main_background = data.main_background;
						calEvent.time_background = data.time_background;
						calEvent.time_border = data.time_border;
		                $calendar.weekCalendar("updateEvent", calEvent);
		                $dialogContent.dialog("close");
						}
						else
						{
							alert("Failed to edit event!");
							$dialogContent.dialog("close");
						}
					}, type: 'PUT'});
               },
               "delete" : function() {
				  $.ajax('<%= events_path %>/' + calEvent.id + '.json',{
				  data:{
					authenticity_token: '<%= form_authenticity_token %>'
				  },
				  type: 'DELETE', success: function(data, textStatus, xhr){
					if(xhr.status == 200)
					{
						$calendar.weekCalendar("removeEvent", calEvent.id);
		                $dialogContent.dialog("close");
					}
					else
					{
						alert("Failed to delete event!");
						$dialogContent.dialog("close");
					}
				  }});
               },
               cancel : function() {
                  $dialogContent.dialog("close");
               }
            }
         }).show();

         var startField = $dialogContent.find("select[name='start']").val(calEvent.start);
         var endField = $dialogContent.find("select[name='end']").val(calEvent.end);
         $dialogContent.find(".date_holder").text($calendar.weekCalendar("formatDate", calEvent.start));
         setupStartAndEndTimeFields(startField, endField, calEvent, $calendar.weekCalendar("getTimeslotTimes", calEvent.start));
         $(window).resize().resize(); //fixes a bug in modal overlay size ??
		<% end %>
      }
    });

    function displayMessage(message) {
      
    }
  });

  var $timestampsOfOptions = {start:[],end:[]};

  function setupStartAndEndTimeFields($startTimeField, $endTimeField, calEvent, timeslotTimes) {

      $startTimeField.empty();
      $endTimeField.empty();

      for (var i = 0; i < timeslotTimes.length; i++) {
         var startTime = timeslotTimes[i].start;
         var endTime = timeslotTimes[i].end;
         var startSelected = "";
         if (startTime.getTime() === calEvent.start.getTime()) {
            startSelected = "selected=\"selected\"";
         }
         var endSelected = "";
         if (endTime.getTime() === calEvent.end.getTime()) {
            endSelected = "selected=\"selected\"";
         }
         $startTimeField.append("<option value=\"" + startTime + "\" " + startSelected + ">" + timeslotTimes[i].startFormatted + "</option>");
         $endTimeField.append("<option value=\"" + endTime + "\" " + endSelected + ">" + timeslotTimes[i].endFormatted + "</option>");

         $timestampsOfOptions.start[timeslotTimes[i].startFormatted] = startTime.getTime();
         $timestampsOfOptions.end[timeslotTimes[i].endFormatted] = endTime.getTime();

      }
      $endTimeOptions = $endTimeField.find("option");
      $startTimeField.trigger("change");
   }

  $("#attendee_select").multiselect();

</script>
<% end %>